// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * An example of generating swagger via gRPC ecosystem.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 * Contact: none@example.com
 */

package openapi

import (
	"context"
	"net/http"
)

// ExampleServiceAPIRouter defines the required methods for binding the api requests to a responses for the ExampleServiceAPI
// The ExampleServiceAPIRouter implementation should parse necessary information from the http request,
// pass the data to a ExampleServiceAPIServicer to perform the required actions, then write the service results to the http response.
type ExampleServiceAPIRouter interface {
	ExampleServiceQuery(http.ResponseWriter, *http.Request)
}

// HealthServiceAPIRouter defines the required methods for binding the api requests to a responses for the HealthServiceAPI
// The HealthServiceAPIRouter implementation should parse necessary information from the http request,
// pass the data to a HealthServiceAPIServicer to perform the required actions, then write the service results to the http response.
type HealthServiceAPIRouter interface {
	HealthServiceCheck(http.ResponseWriter, *http.Request)
}

// ExampleServiceAPIServicer defines the api actions for the ExampleServiceAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ExampleServiceAPIServicer interface {
	ExampleServiceQuery(context.Context, string, map[string]interface{}) (ImplResponse, error)
}

// HealthServiceAPIServicer defines the api actions for the HealthServiceAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type HealthServiceAPIServicer interface {
	HealthServiceCheck(context.Context, string) (ImplResponse, error)
}

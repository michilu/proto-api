/*
 * An example of generating swagger via gRPC ecosystem.
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 * Contact: none@example.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
)

// ExampleServiceApiRouter defines the required methods for binding the api requests to a responses for the ExampleServiceApi
// The ExampleServiceApiRouter implementation should parse necessary information from the http request,
// pass the data to a ExampleServiceApiServicer to perform the required actions, then write the service results to the http response.
type ExampleServiceApiRouter interface {
	Query(http.ResponseWriter, *http.Request)
}

// HealthCheckServiceApiRouter defines the required methods for binding the api requests to a responses for the HealthCheckServiceApi
// The HealthCheckServiceApiRouter implementation should parse necessary information from the http request,
// pass the data to a HealthCheckServiceApiServicer to perform the required actions, then write the service results to the http response.
type HealthCheckServiceApiRouter interface {
	HealthCheck(http.ResponseWriter, *http.Request)
}

// ExampleServiceApiServicer defines the api actions for the ExampleServiceApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type ExampleServiceApiServicer interface {
	Query(context.Context, string, V1ExampleServiceQueryRequest) (ImplResponse, error)
}

// HealthCheckServiceApiServicer defines the api actions for the HealthCheckServiceApi service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type HealthCheckServiceApiServicer interface {
	HealthCheck(context.Context) (ImplResponse, error)
}

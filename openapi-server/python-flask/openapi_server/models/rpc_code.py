from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server import util


class RpcCode(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    NUMBER_&#39;OK&#39; = 'OK'
    NUMBER_&#39;CANCELLED&#39; = 'CANCELLED'
    NUMBER_&#39;UNKNOWN&#39; = 'UNKNOWN'
    NUMBER_&#39;INVALID_ARGUMENT&#39; = 'INVALID_ARGUMENT'
    NUMBER_&#39;DEADLINE_EXCEEDED&#39; = 'DEADLINE_EXCEEDED'
    NUMBER_&#39;NOT_FOUND&#39; = 'NOT_FOUND'
    NUMBER_&#39;ALREADY_EXISTS&#39; = 'ALREADY_EXISTS'
    NUMBER_&#39;PERMISSION_DENIED&#39; = 'PERMISSION_DENIED'
    NUMBER_&#39;UNAUTHENTICATED&#39; = 'UNAUTHENTICATED'
    NUMBER_&#39;RESOURCE_EXHAUSTED&#39; = 'RESOURCE_EXHAUSTED'
    NUMBER_&#39;FAILED_PRECONDITION&#39; = 'FAILED_PRECONDITION'
    NUMBER_&#39;ABORTED&#39; = 'ABORTED'
    NUMBER_&#39;OUT_OF_RANGE&#39; = 'OUT_OF_RANGE'
    NUMBER_&#39;UNIMPLEMENTED&#39; = 'UNIMPLEMENTED'
    NUMBER_&#39;INTERNAL&#39; = 'INTERNAL'
    NUMBER_&#39;UNAVAILABLE&#39; = 'UNAVAILABLE'
    NUMBER_&#39;DATA_LOSS&#39; = 'DATA_LOSS'
    def __init__(self):  # noqa: E501
        """RpcCode - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt) -> 'RpcCode':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The rpcCode of this RpcCode.  # noqa: E501
        :rtype: RpcCode
        """
        return util.deserialize_model(dikt, cls)

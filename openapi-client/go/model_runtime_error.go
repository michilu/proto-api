/*
An example of generating swagger via gRPC ecosystem.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
Contact: none@example.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RuntimeError struct for RuntimeError
type RuntimeError struct {
	Error *string `json:"error,omitempty"`
	Code *int32 `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	Details []ProtobufAny `json:"details,omitempty"`
}

// NewRuntimeError instantiates a new RuntimeError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRuntimeError() *RuntimeError {
	this := RuntimeError{}
	return &this
}

// NewRuntimeErrorWithDefaults instantiates a new RuntimeError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRuntimeErrorWithDefaults() *RuntimeError {
	this := RuntimeError{}
	return &this
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *RuntimeError) GetError() string {
	if o == nil || o.Error == nil {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuntimeError) GetErrorOk() (*string, bool) {
	if o == nil || o.Error == nil {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *RuntimeError) HasError() bool {
	if o != nil && o.Error != nil {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *RuntimeError) SetError(v string) {
	o.Error = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *RuntimeError) GetCode() int32 {
	if o == nil || o.Code == nil {
		var ret int32
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuntimeError) GetCodeOk() (*int32, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *RuntimeError) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given int32 and assigns it to the Code field.
func (o *RuntimeError) SetCode(v int32) {
	o.Code = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *RuntimeError) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuntimeError) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *RuntimeError) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *RuntimeError) SetMessage(v string) {
	o.Message = &v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *RuntimeError) GetDetails() []ProtobufAny {
	if o == nil || o.Details == nil {
		var ret []ProtobufAny
		return ret
	}
	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RuntimeError) GetDetailsOk() ([]ProtobufAny, bool) {
	if o == nil || o.Details == nil {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *RuntimeError) HasDetails() bool {
	if o != nil && o.Details != nil {
		return true
	}

	return false
}

// SetDetails gets a reference to the given []ProtobufAny and assigns it to the Details field.
func (o *RuntimeError) SetDetails(v []ProtobufAny) {
	o.Details = v
}

func (o RuntimeError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Error != nil {
		toSerialize["error"] = o.Error
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.Details != nil {
		toSerialize["details"] = o.Details
	}
	return json.Marshal(toSerialize)
}

type NullableRuntimeError struct {
	value *RuntimeError
	isSet bool
}

func (v NullableRuntimeError) Get() *RuntimeError {
	return v.value
}

func (v *NullableRuntimeError) Set(val *RuntimeError) {
	v.value = val
	v.isSet = true
}

func (v NullableRuntimeError) IsSet() bool {
	return v.isSet
}

func (v *NullableRuntimeError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRuntimeError(val *RuntimeError) *NullableRuntimeError {
	return &NullableRuntimeError{value: val, isSet: true}
}

func (v NullableRuntimeError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRuntimeError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



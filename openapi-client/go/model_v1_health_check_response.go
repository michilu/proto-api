/*
An example of generating swagger via gRPC ecosystem.

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0
Contact: none@example.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the V1HealthCheckResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1HealthCheckResponse{}

// V1HealthCheckResponse struct for V1HealthCheckResponse
type V1HealthCheckResponse struct {
	Status *HealthCheckResponseServingStatus `json:"status,omitempty"`
}

// NewV1HealthCheckResponse instantiates a new V1HealthCheckResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1HealthCheckResponse() *V1HealthCheckResponse {
	this := V1HealthCheckResponse{}
	var status HealthCheckResponseServingStatus = UNKNOWN
	this.Status = &status
	return &this
}

// NewV1HealthCheckResponseWithDefaults instantiates a new V1HealthCheckResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1HealthCheckResponseWithDefaults() *V1HealthCheckResponse {
	this := V1HealthCheckResponse{}
	var status HealthCheckResponseServingStatus = UNKNOWN
	this.Status = &status
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *V1HealthCheckResponse) GetStatus() HealthCheckResponseServingStatus {
	if o == nil || IsNil(o.Status) {
		var ret HealthCheckResponseServingStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1HealthCheckResponse) GetStatusOk() (*HealthCheckResponseServingStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *V1HealthCheckResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given HealthCheckResponseServingStatus and assigns it to the Status field.
func (o *V1HealthCheckResponse) SetStatus(v HealthCheckResponseServingStatus) {
	o.Status = &v
}

func (o V1HealthCheckResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1HealthCheckResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableV1HealthCheckResponse struct {
	value *V1HealthCheckResponse
	isSet bool
}

func (v NullableV1HealthCheckResponse) Get() *V1HealthCheckResponse {
	return v.value
}

func (v *NullableV1HealthCheckResponse) Set(val *V1HealthCheckResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableV1HealthCheckResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableV1HealthCheckResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1HealthCheckResponse(val *V1HealthCheckResponse) *NullableV1HealthCheckResponse {
	return &NullableV1HealthCheckResponse{value: val, isSet: true}
}

func (v NullableV1HealthCheckResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1HealthCheckResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

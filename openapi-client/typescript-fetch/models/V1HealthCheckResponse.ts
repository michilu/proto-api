/* tslint:disable */
/* eslint-disable */
/**
 * An example of generating swagger via gRPC ecosystem.
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * Contact: none@example.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { HealthCheckResponseServingStatus } from './HealthCheckResponseServingStatus';
import {
    HealthCheckResponseServingStatusFromJSON,
    HealthCheckResponseServingStatusFromJSONTyped,
    HealthCheckResponseServingStatusToJSON,
} from './HealthCheckResponseServingStatus';

/**
 * 
 * @export
 * @interface V1HealthCheckResponse
 */
export interface V1HealthCheckResponse {
    /**
     * 
     * @type {HealthCheckResponseServingStatus}
     * @memberof V1HealthCheckResponse
     */
    status?: HealthCheckResponseServingStatus;
}

/**
 * Check if a given object implements the V1HealthCheckResponse interface.
 */
export function instanceOfV1HealthCheckResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function V1HealthCheckResponseFromJSON(json: any): V1HealthCheckResponse {
    return V1HealthCheckResponseFromJSONTyped(json, false);
}

export function V1HealthCheckResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1HealthCheckResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': !exists(json, 'status') ? undefined : HealthCheckResponseServingStatusFromJSON(json['status']),
    };
}

export function V1HealthCheckResponseToJSON(value?: V1HealthCheckResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': HealthCheckResponseServingStatusToJSON(value.status),
    };
}


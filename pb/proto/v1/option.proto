syntax = "proto3";

package proto.v1;

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info: {
    title: "An example of generating swagger via gRPC ecosystem."
    version: "1.0"
    contact: {
      url: "https://github.com/michilu/proto-api"
      email: "none@example.com"
    }
    license: {
      name: "Apache-2.0"
      url: "https://github.com/michilu/proto-api/blob/master/LICENSE"
    }
  }
  schemes: HTTPS
  schemes: WSS
  consumes: "application/json"
  produces: "application/json"
  security_definitions: {
    security: {
      key: "ApiKeyAuth"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "X-API-Key"
      }
    }
    security: {
      key: "OAuth2"
      value: {
        type: TYPE_OAUTH2
        flow: FLOW_ACCESS_CODE
        authorization_url: "https://example.com/oauth/authorize"
        token_url: "https://example.com/oauth/token"
        scopes: {
          scope: {
            key: "read"
            value: "Grants read access"
          }
          scope: {
            key: "write"
            value: "Grants write access"
          }
          scope: {
            key: "admin"
            value: "Grants read and write access to administrative information"
          }
        }
      }
    }
  }
  security: {
    security_requirement: {
      key: "OAuth2"
      value: {
        scope: "read"
        scope: "write"
      }
    }
    security_requirement: {
      key: "ApiKeyAuth"
    }
  }
};
option go_package = "pb/proto/v1";

import "protoc-gen-swagger/options/annotations.proto";

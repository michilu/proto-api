syntax = "proto3";

package proto.v1;

import "google/api/annotations.proto";
import "proto/v1/message.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "validate/validate.proto";

option go_package = "pb/proto/v1";

service ExampleService {
  rpc Query(ExampleServiceQueryRequest) returns (ExampleServiceQueryResponse) {
    option (google.api.http) = {
      post: "/v1/example/{id}"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_swagger.options.openapiv2_operation) = {
      security: {
        security_requirement: {
          key: "ApiKeyAuth"
        }
        security_requirement: {
          key: "OAuth2"
          value: {
            scope: "read"
            scope: "write"
          }
        }
      }
    };
  }
}

message ExampleServiceQueryRequest {
  string id = 1 [
    (grpc.gateway.protoc_gen_swagger.options.openapiv2_field) = {
      pattern: "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
      min_length: 1
    },
    (validate.rules).string.uuid = true
  ];
}

message ExampleServiceQueryResponse {
  Response value = 1;
}

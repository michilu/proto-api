syntax = "proto3";

package proto.v1;

import "google/rpc/code.proto";
import "validate/validate.proto";

option go_package = "pb/proto/v1";

// RFC 7807 - Problem Details for HTTP APIs https://datatracker.ietf.org/doc/html/rfc7807
message ProblemDetails {
  // "type" (string) - A URI reference [RFC3986] that identifies the
  // problem type.  This specification encourages that, when
  // dereferenced, it provide human-readable documentation for the
  // problem type (e.g., using HTML [W3C.REC-html5-20141028]).  When
  // this member is not present, its value is assumed to be
  // "about:blank".
  string type = 1;
  // "title" (string) - A short, human-readable summary of the problem
  // type.  It SHOULD NOT change from occurrence to occurrence of the
  // problem, except for purposes of localization (e.g., using
  // proactive content negotiation; see [RFC7231], Section 3.4).
  string title = 2;
  // "status" (number) - The HTTP status code ([RFC7231], Section 6)
  // generated by the origin server for this occurrence of the problem.
  int32 status = 3;
  // "detail" (string) - A human-readable explanation specific to this
  // occurrence of the problem.
  string detail = 4;
  // "instance" (string) - A URI reference that identifies the specific
  // occurrence of the problem.  It may or may not yield further
  // information if dereferenced.
  string instance = 5;
  // extensions are more suitable and less error-prone ways to obtain such
  // information.
  map<string, string> extensions = 6;
}

// This message has the same semantics as `google.rpc.Status`.
// It uses HTTP status code instead of gRPC status code.
// It has extra fields `status` and `errors` for backward compatibility with
// [Google API Client Libraries](https://developers.google.com/api-client-library).
message Status {
  // The HTTP status code that corresponds to `google.rpc.Status.code`.
  int32 code = 1;
  // This corresponds to `google.rpc.Status.message`.
  string message = 2;
  // This is the enum version for `google.rpc.Status.code`.
  google.rpc.Code status = 3 [(validate.rules).enum.defined_only = true];
  repeated ProblemDetails problem_details = 4;
}

message Response {
  Status error = 1;
}

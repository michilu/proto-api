syntax = "proto3";

package proto.v1;

import "google/rpc/code.proto";
import "validate/validate.proto";

option go_package = "pb/proto/v1";

// RFC 9457 - Problem Details for HTTP APIs https://datatracker.ietf.org/doc/html/rfc9457
message ProblemDetails {
  // The "type" member is a JSON string containing a URI reference [URI] that identifies the problem type. Consumers MUST use the "type" URI (after resolution, if necessary) as the problem type's primary identifier.
  // When this member is not present, its value is assumed to be "about:blank".
  string type = 1 [(validate.rules).string.uri = true];
  // The "status" member is a JSON number indicating the HTTP status code ([HTTP], Section 15) generated by the origin server for this occurrence of the problem.
  int32 status = 2 [(validate.rules).int32 = {
    gte: 100,
    lt: 600
  }];
  // The "title" member is a JSON string containing a short, human-readable summary of the problem type.
  string title = 3;
  // The "detail" member is a JSON string containing a human-readable explanation specific to this occurrence of the problem.
  // The "detail" string, if present, ought to focus on helping the client correct the problem, rather than giving debugging information.
  string detail = 4;
  // The "instance" member is a JSON string containing a URI reference that identifies the specific occurrence of the problem.
  string instance = 5 [(validate.rules).string.uri_ref = true];
  // Problem type definitions MAY extend the problem details object with additional members that are specific to that problem type.
  repeated string extensions = 6;
}

// Extends [RFC 9457] for API response.
// RFC 9457 - Problem Details for HTTP APIs https://datatracker.ietf.org/doc/html/rfc9457
message Status {
  // The "type" member is a JSON string containing a URI reference [URI] that identifies the problem/response type. Consumers MUST use the "type" URI (after resolution, if necessary) as the problem/response type's primary identifier.
  // When this member is not present, its value is assumed to be "about:blank".
  string type = 1 [(validate.rules).string.uri = true];
  // The "status" member is a JSON number indicating the HTTP status code ([HTTP], Section 15) generated by the origin server for this occurrence of the problem/response.
  // The HTTP status code that corresponds to `google.rpc.Status.code`.
  int32 status = 2 [(validate.rules).int32 = {
    gte: 100,
    lt: 600
  }];
  // The "title" member is a JSON string containing a short, human-readable summary of the problem/response type.
  string title = 3;
  // The "detail" member is a JSON string containing a human-readable explanation specific to this occurrence of the problem/response.
  // The "detail" string, if present, ought to focus on helping the client correct the problem/response, rather than giving debugging information.
  string detail = 4;
  // The "instance" member is a JSON string containing a URI reference that identifies the specific occurrence of the problem/response.
  string instance = 5 [(validate.rules).string.uri_ref = true];
  // Problem type definitions MAY extend the problem details object with additional members that are specific to that problem type.
  repeated string extensions = 6;
  // This is the enum version for `google.rpc.Status.code`.
  google.rpc.Code code = 7 [(validate.rules).enum.defined_only = true];
}

message Response {
  Status status = 1;
  map<string, string> data = 2;
}
